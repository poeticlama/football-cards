name: Deploy to GitHub Pages

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
      - name: Install dependencies
        run: npm install
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Run lint
        run: npm run lint

#  test:
#    runs-on: ubuntu-latest
#    needs: install
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-node@v4
#        with:
#          node-version: '22.18.0'
#      - name: Restore node_modules cache
#        uses: actions/cache@v3
#        with:
#          path: node_modules
#          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#      - name: Build project
#        run: npm run build
#      - name: Setup Playwright
#        run: npx playwright install --with-deps
#      - name: Run tests
#        run: npx playwright test

  build:
    runs-on: ubuntu-latest
    needs: [lint]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '22.18.0'
      - name: Restore node_modules cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Create .env file from secrets
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > .env
          echo "VITE_API_KEY=${{ secrets.VITE_API_KEY }}" >> .env
          echo "VITE_APP_ID=${{ secrets.VITE_APP_ID }}" >> .env
          echo "VITE_AUTH_DOMAIN=${{ secrets.VITE_AUTH_DOMAIN }}" >> .env
          echo "VITE_MESSAGING_SENDER_ID=${{ secrets.VITE_MESSAGING_SENDER_ID }}" >> .env
          echo "VITE_PROJECT_ID=${{ secrets.VITE_PROJECT_ID }}" >> .env
          echo "VITE_ROLLBAR_TOKEN=${{ secrets.VITE_ROLLBAR_TOKEN }}" >> .env
          echo "VITE_STORAGE_BUCKET=${{ secrets.VITE_STORAGE_BUCKET}}" >> .env
          echo "VITE_APP_ENV=production" >> .env
          echo "VITE_APP_VERSION=${{ github.sha }}" >> .env
        shell: bash
      - name: Build project
        run: npm run build
        env:
          NODE_ENV: production
          CI: true
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
